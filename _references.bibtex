
@book{poppendieck_leading_2009,
	title = {Leading {Lean} {Software} {Development}: {Results} {Are} not the {Point}},
	isbn = {978-0-321-69965-7},
	shorttitle = {Leading {Lean} {Software} {Development}},
	abstract = {Building on their breakthrough bestsellers Lean Software Development and Implementing Lean Software Development, Mary and Tom Poppendieck’s latest book shows software leaders and team members exactly how to drive high-value change throughout a software organization—and make it stick. They go far beyond generic implementation guidelines, demonstrating exactly how to make lean work in real projects, environments, and companies. The Poppendiecks organize this book around the crucial concept of frames, the unspoken mental constructs that shape our perspectives and control our behavior in ways we rarely notice. For software leaders and team members, some frames lead to long-term failure, while others offer a strong foundation for success. Drawing on decades of experience, the authors present twenty-four frames that offer a coherent, complete framework for leading lean software development. You’ll discover powerful new ways to act as competency leader, product champion, improvement mentor, front-line leader, and even visionary.   Systems thinking: focusing on customers, bringing predictability to demand, and revamping policies that cause inefficiency Technical excellence: implementing low-dependency architectures, TDD, and evolutionary development processes, and promoting deeper developer expertise Reliable delivery: managing your biggest risks more effectively, and optimizing both workflow and schedules Relentless improvement: seeing problems, solving problems, sharing the knowledge Great people: finding and growing professionals with purpose, passion, persistence, and pride Aligned leaders: getting your entire leadership team on the same page  From the world’s number one experts in Lean software development,  Leading Lean Software Development  will be indispensable to everyone who wants to transform the promise of lean into reality—in enterprise IT and software companies alike.},
	language = {en},
	publisher = {Pearson Education},
	author = {Poppendieck, Mary and Poppendieck, Tom},
	month = oct,
	year = {2009},
	keywords = {Computers / Software Development \& Engineering / General, Computers / Software Development \& Engineering / Project Management}
}

@book{hohmann_journey_1997,
	title = {Journey of the {Software} {Professional}: {A} {Sociology} of {Software} {Development}},
	isbn = {978-0-13-236613-7},
	shorttitle = {Journey of the {Software} {Professional}},
	abstract = {A comprehensive guide to the software development process that will help software developers at every stage of their career: improving personal performance, learning to work well in a team, and managing to create an environment where others can be most effective. Addresses the psychological and sociological aspects of software development, presenting a thorough model of individual and collective software problem-solving behavior, and practical techniques for enhancing the process. Covers the structures, processes and outcomes common to most software development projects, and how to improve them. Presents ideas on using tools and training more effectively, and on improving the performance of teams. Shows how to build on your personal and management successes, and avoid the most common errors. Programmers, developers, software managers, students, and anyone involved in the software creation process.},
	language = {en},
	publisher = {Prentice Hall PTR},
	author = {Hohmann, Luke},
	year = {1997},
	note = {Google-Books-ID: wqBQAAAAMAAJ},
	keywords = {Computers / Software Development \& Engineering / General}
}

@book{kim_devops_2016,
	title = {The {DevOps} {Handbook}: {How} to {Create} {World}-{Class} {Speed}, {Reliability}, and {Security} in {Technology} {Organizations}},
	isbn = {978-1-942788-00-3},
	shorttitle = {The {DevOps} {Handbook}},
	abstract = {More than ever, the effective management of technology is critical for business competitiveness. For decades, technology leaders have struggled to balance agility, reliability, and security. The consequences of failure have never been greater whether it is the healthcare.gov debacle, the Target cardholder data breach, or missing the boat with Big Data in the cloud. And yet, high performers using DevOps principles, such as Google, Amazon, Facebook, Etsy, and Netflix, are routinely deploying code into production hundreds, or even thousands, of times per day, while providing world-class agility, reliability, and security. In contrast, most organizations struggle to do releases every nine months.  By studying over 14,000 IT professionals worldwide, the authors have observed that high-performing organizations are 2.5 times more likely than their peers to exceed profitability, market share, and productivity goals. The DevOps Handbook shows leaders how to replicate these incredible outcomes, describing what is required from all parts of the technology organization. Product Management, Development, Test, IT Operations, and Information Security working together can create the cultural norms and the technical practices necessary to maximize organizational learning, increase employee satisfaction, and win in the marketplace.},
	language = {en},
	publisher = {IT Revolution Press},
	author = {Kim, Gene and Debois, Patrick and Willis, John and Humble, Jez},
	year = {2016},
	note = {Google-Books-ID: XrQcrgEACAAJ},
	keywords = {Business \& Economics / Information Management, Business \& Economics / Management}
}

@book{horstman_effective_2016,
	title = {The {Effective} {Manager}},
	isbn = {978-1-119-24460-8},
	abstract = {The how-to guide for exceptional management from the bottom up The Effective Manager is a hands-on practical guide to great management at every level. Written by the man behind Manager Tools, the world's number-one business podcast, this book distills the author's 25 years of management training expertise into clear, actionable steps to start taking today. First, you'll identify what "effective management" actually looks like: can you get the job done at a high level? Do you attract and retain top talent without burning them out? Then you'll dig into the four critical behaviors that make a manager great, and learn how to adjust your own behavior to be the leader your team needs. You'll learn the four major tools that should be a part of every manager's repertoire, how to use them, and even how to introduce them to the team in a productive, non-disruptive way. Most management books are written for CEOs and geared toward improving corporate management, but this book is expressly aimed at managers of any level—with a behavioral framework designed to be tailored to your team's specific needs.  Understand your team's strengths, weaknesses, and goals in a meaningful way Stop limiting feedback to when something goes wrong Motivate your people to continuous improvement Spread the work around and let people stretch their skills  Effective managers are good at the job and "good at people." The key is combining those skills to foster your team's development, get better and better results, and maintain a culture of positive productivity. The Effective Manager shows you how to turn good into great with clear, actionable, expert guidance.},
	language = {en},
	publisher = {John Wiley \& Sons},
	author = {Horstman, Mark},
	month = jul,
	year = {2016},
	keywords = {Business \& Economics / Management, Business \& Economics / Business Communication / General}
}

@book{drucker_effective_2007,
	title = {The {Effective} {Executive}},
	isbn = {978-0-7506-8507-8},
	abstract = {The measure of the executive, Peter Drucker reminds us, is the ability to 'get the right things done'. Usually this involves doing what other people have overlooked, as well as avoiding what is unproductive.He identifies five talents as essential to effectiveness, and these can be learned; in fact, they must be learned just as scales must be mastered by every piano student regardless of his natural gifts. Intelligence, imagination and knowledge may all be wasted in an executive job without the acquired habits of mind that convert these into results. One of the talents is the management of time. Another is choosing what to contribute to the particular organization. A third is knowing where and how to apply your strength to best effect. Fourth is setting up the right priorities. And all of them must be knitted together by effective decision-making. How these can be developed forms the main body of the book. The author ranges widely through the annals of business and government to demonstrate the distinctive skill of the executive. He turns familiar experience upside down to see it in new perspective. The book is full of surprises, with its fresh insights into old and seemingly trite situations.},
	language = {en},
	publisher = {Butterworth-Heinemann},
	author = {Drucker, Peter F.},
	year = {2007},
	keywords = {Business \& Economics / Management}
}

@book{carroll_through_1897,
	title = {Through the {Looking} {Glass}: {And} what {Alice} {Found} {There}},
	shorttitle = {Through the {Looking} {Glass}},
	language = {en},
	publisher = {Henry Altemus},
	author = {Carroll, Lewis},
	year = {1897},
	note = {Google-Books-ID: i2MCAAAAYAAJ}
}

@book{rasmusson_agile_2014,
	title = {The {Agile} {Samurai}: {How} {Agile} {Masters} {Deliver} {Great} {Software}},
	isbn = {978-1-68050-006-6},
	shorttitle = {The {Agile} {Samurai}},
	language = {en},
	publisher = {Pragmatic Bookshelf},
	author = {Rasmusson, Jonathan},
	year = {2014},
	note = {Google-Books-ID: 7HevDAEACAAJ}
}

@book{beck_extreme_2000,
	title = {Extreme {Programming} {Explained}: {Embrace} {Change}},
	isbn = {978-0-201-61641-5},
	shorttitle = {Extreme {Programming} {Explained}},
	abstract = {Software development projects can be fun, productive, and even daring. Yet they can consistently deliver value to a business and remain under control.  Extreme Programming (XP) was conceived and developed to address the specific needs of software development conducted by small teams in the face of vague and changing requirements. This new lightweight methodology challenges many conventional tenets, including the long-held assumption that the cost of changing a piece of software necessarily rises dramatically over the course of time. XP recognizes that projects have to work to achieve this reduction in cost and exploit the savings once they have been earned.  Fundamentals of XP include:   Distinguishing between the decisions to be made by business interests and those to be made by project stakeholders.  Writing unit tests before programming and keeping all of the tests running at all times.  Integrating and testing the whole system--several times a day.  Producing all software in pairs, two programmers at one screen.  Starting projects with a simple design that constantly evolves to add needed flexibility and remove unneeded complexity.  Putting a minimal system into production quickly and growing it in whatever directions prove most valuable.   Why is XP so controversial? Some sacred cows don't make the cut in XP:   Don't force team members to specialize and become analysts, architects, programmers, testers, and integrators--every XP programmer participates in all of these critical activities every day.  Don't conduct complete up-front analysis and design--an XP project starts with a quick analysis of the entire system, and XPprogrammers continue to make analysis and design decisions throughout development.  Develop infrastructure and frameworks as you develop your application, not up-front--delivering business value is the heartbeat that drives XP projects.  Don't write and maintain implementation documentation--communication in XP projects occurs face-to-face, or through efficient tests and carefully written code.   You may love XP, or you may hate it, but "Extreme Programming Explained" will force you to take a fresh look at how you develop software.  0201616416B04062001},
	language = {en},
	publisher = {Addison-Wesley Professional},
	author = {Beck, Kent and Gamma, Erich},
	year = {2000},
	note = {Google-Books-ID: G8EL4H4vf7UC},
	keywords = {Computers / Software Development \& Engineering / General}
}

@misc{krycho_academic_2015,
	title = {Academic {Markdown} and {Citations} · {Chris} {Krycho}},
	url = {https://www.chriskrycho.com/2015/academic-markdown-and-citations.html},
	urldate = {2019-04-08}
}

@misc{cunningham_software_2005,
	title = {Software {Development} {As} {Craft}},
	url = {http://wiki.c2.com/?SoftwareDevelopmentAsCraft},
	urldate = {2019-06-23},
	journal = {Portland Pattern Repository},
	author = {Cunningham, Ward},
	month = dec,
	year = {2005},
	file = {Software Development As Craft:/Users/dmitchell/Zotero/storage/Y8SV8N7X/wiki.c2.com.html:text/html}
}